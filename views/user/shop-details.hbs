{{> user/header}}




<!-- Shop Details Section Begin -->
<section class="shop-details">
    <div class="product__details__pic">
        <div class="container">
            <div class="row">
                <div class="col-lg-12">
                    <div class="product__details__breadcrumb">
                        <a href="/">Home</a>
                        <a href="/shop">Shop</a>
                        <span>Product Details</span>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-lg-3 col-md-3">
                    <ul class="nav nav-tabs" role="tablist">
                        <li class="nav-item">
                            <a class="nav-link active" data-toggle="tab" href="#tabs-1" role="tab">
                                <div class="product__thumb__pic set-bg"
                                    data-setbg="/uploads/re-image/{{product.productImage.[0]}}">
                                </div>
                            </a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" data-toggle="tab" href="#tabs-2" role="tab">
                                <div class="product__thumb__pic set-bg"
                                    data-setbg="/uploads/re-image/{{product.productImage.[1]}}">
                                </div>
                            </a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" data-toggle="tab" href="#tabs-3" role="tab">
                                <div class="product__thumb__pic set-bg"
                                    data-setbg="/uploads/re-image/{{product.productImage.[2]}}">
                                </div>
                            </a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" data-toggle="tab" href="#tabs-4" role="tab">
                                <div class="product__thumb__pic set-bg"
                                    data-setbg="/uploads/re-image/{{product.productImage.[3]}}">
                                </div>
                            </a>
                        </li>
                    </ul>
                </div>
                <div class="col-lg-6 col-md-9">
                    <div class="tab-content">
                        <div class="tab-pane active" id="tabs-1" role="tabpanel">
                            <div class="product__details__pic__item hero-image-container" id="magnifier-container">
                                <img src="/uploads/re-image/{{product.productImage.[0]}}" alt="" class="hero-image"
                                    id="main-image" data-large-src="/uploads/re-image/{{product.productImage.[0]}}">
                                <div id="magnifier-lens"></div>
                            </div>
                        </div>
                        <div class="tab-pane" id="tabs-2" role="tabpanel">
                            <div class="product__details__pic__item">
                                <img src="/uploads/re-image/{{product.productImage.[1]}}" alt="">
                            </div>
                        </div>
                        <div class="tab-pane" id="tabs-3" role="tabpanel">
                            <div class="product__details__pic__item">
                                <img src="/uploads/re-image/{{product.productImage.[2]}}" alt="">
                            </div>
                        </div>
                        <div class="tab-pane" id="tabs-4" role="tabpanel">
                            <div class="product__details__pic__item">
                                <img src="/uploads/re-image/{{product.productImage.[3]}}" alt="">
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="product__details__content">
        <div class="container">
            <div class="row d-flex justify-content-center">
                <div class="col-lg-8">
                    <div class="product__details__text">
                        <h4>{{product.productName}}</h4>
                        <div class="rating">
                            <i class="fa fa-star"></i>
                            <i class="fa fa-star"></i>
                            <i class="fa fa-star"></i>
                            <i class="fa fa-star"></i>
                            <i class="fa fa-star-o"></i>
                            <span> - 5 Reviews</span>
                        </div>
                        {{#if (eq product.productOffer 0)}}
                        {{else}}
                        <h4 style="color: red;">{{product.productOffer}}% off </h4>
                        {{/if}}
                        <h3>₹ {{product.salePrice}} {{#if (gt product.productOffer 0)}}<span>₹
                                {{product.regularPrice}}</span>{{/if}}</h3>
                        <p>{{product.description}}</p>
                        <div class="product__details__option">
                            <div class="product__details__option__size">
                                <span>Size:</span>
                                {{#each product.variant}}
                                <label for="{{this.size}}">{{this.size}}
                                    <input type="radio" id="{{this.size}}" name="size" value="{{this.size}}">
                                </label>
                                {{/each}}
                            </div>
                            <div class="product__stock">
                                <p style="color: rgb(63, 184, 63); font-weight: bold">Stock left: <span
                                        id="stock-left"></span></p>
                            </div>
                        </div>

                        <div class="product__details__cart__option">
                            <a href="#" class="primary-btn" id="add-to-cart" data-id="{{product._id}}">Add to Cart</a>
                        </div>
                        <div class="product__details__btns__option">
                            <a href="#" id="add-to-wishlist" data-id="{{product._id}}"><i class="fa fa-heart"></i> Add
                                to wishlist</a>
                        </div>
                    </div>
                </div>
            </div>

        </div>
    </div>
</section>
<!-- Shop Details Section End -->
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.min.js"></script>


<script>

    $(document).ready(function () {
        $('input[name = "size"]').on('change', function () {
            const selectedSize = $(this).val();
            const productId = '{{product._id}}';

            $.ajax({
                url: `/shop/details/stock/${productId}/${selectedSize}`,
                method: 'GET',
                success: function (response) {
                    $('#stock-left').text(response.stock)
                },
                error: function () {
                    $('#stock-left').text('Error retrieving stock')
                },
            })
        })
    })

    $(document).on('click', '#add-to-cart', function (e) {
        e.preventDefault();

        // Get the selected size and product ID
        const selectedSize = $('input[name="size"]:checked').val();
        const productId = $(this).data('id');

        if (!selectedSize) {
            Swal.fire({
                title: 'Error!',
                text: 'Please select a size before adding to cart.',
                icon: 'warning',
                confirmButtonText: 'OK'
            });
            return;
        }

        // Make the AJAX request to add the product to the cart
        $.ajax({
            url: '/cart/add',  // Backend endpoint to handle adding to cart
            method: 'POST',
            contentType: 'application/json',
            data: JSON.stringify({
                productId: productId,
                size: selectedSize
            }),
            success: function (response) {
                // Redirect to cart page after successfully adding to cart
                window.location.href = '/cart';
            },
            error: function (error) {
                // Show an error message if something goes wrong
                console.error("Error adding product to cart:", error);
                Swal.fire({
                    title: 'Error!',
                    text: 'Unable to add product to cart.',
                    icon: 'error',
                    confirmButtonText: 'OK'
                });
            }
        });
    });


    $(document).on('click', '#add-to-wishlist', function (e) {
        e.preventDefault()

        const productId = $(this).data('id')
        console.log(productId)

        $.ajax({
            url: '/wishlist/add',
            method: 'POST',
            contentType: 'application/json',
            data: JSON.stringify({
                productId: productId
            }),
            success: function (response) {
                window.location.href = '/wishlist'
                toastr.success('Product Added to Wishlist')
            },
            error: function (error) {
                console.log('Error adding to wishlist', error)
                toastr.error('Error adding to wishlist')
            }
        })
    })


    document.addEventListener('DOMContentLoaded', function () {
        const thumbnails = document.querySelectorAll('.nav-link');
        const lens = document.getElementById('magnifier-lens');
        const container = document.getElementById('magnifier-container');
        const mainImage = document.getElementById('main-image');

        // Set the lens dimensions and style
        lens.style.width = "250px";
        lens.style.height = "200px";
        lens.style.position = "absolute";
        lens.style.border = "1px solid #000";
        lens.style.cursor = "none";
        lens.style.borderRadius = '7.5px';

        // Initialize the magnifying lens functionality
        function initializeZoom(image) {
            lens.style.display = 'none'; // Hide the lens initially

            // Function to move the lens
            function moveLens(e) {
                const pos = getCursorPos(e, image);
                let x = pos.x - (lens.offsetWidth / 2);
                let y = pos.y - (lens.offsetHeight / 2);

                // Prevent lens from going out of bounds
                if (x > image.width - lens.offsetWidth) { x = image.width - lens.offsetWidth; }
                if (x < 0) { x = 0; }
                if (y > image.height - lens.offsetHeight) { y = image.height - lens.offsetHeight; }
                if (y < 0) { y = 0; }

                lens.style.left = x + "px";
                lens.style.top = y + "px";
                lens.style.backgroundImage = "url('" + image.src + "')";
                lens.style.backgroundSize = (image.width * 3) + "px " + (image.height * 3) + "px";
                lens.style.backgroundPosition = "-" + (x * 3) + "px -" + (y * 3) + "px";
            }

            function getCursorPos(e, img) {
                const rect = img.getBoundingClientRect();
                return {
                    x: e.pageX - rect.left - window.pageXOffset,
                    y: e.pageY - rect.top - window.pageYOffset
                };
            }

            // Attach mousemove event to the image
            container.addEventListener('mousemove', moveLens);
            container.addEventListener('mouseleave', () => {
                lens.style.display = 'none';
            });
            container.addEventListener('mouseenter', () => {
                lens.style.display = 'block';
            });
        }

        // Handle thumbnail click event
        thumbnails.forEach(thumbnail => {
            thumbnail.addEventListener('click', function () {
                // Remove 'active' class from all tabs
                thumbnails.forEach(tab => tab.classList.remove('active'));

                // Add 'active' class to the clicked tab
                this.classList.add('active');

                // Get the target tab ID
                const targetTabId = this.getAttribute('href');

                // Hide all tab panes
                document.querySelectorAll('.tab-pane').forEach(tabPane => {
                    tabPane.classList.remove('active');
                });

                // Show the target tab pane
                document.querySelector(targetTabId).classList.add('active');

                // Update the main image in the active tab
                const imgSrc = this.querySelector('.product__thumb__pic').getAttribute('data-setbg');
                mainImage.src = imgSrc; // Update main image source
                mainImage.setAttribute('data-large-src', imgSrc); // Update the large source if needed

                // Clear existing event listeners before re-initializing zoom
                container.replaceWith(container.cloneNode(true));
                const newContainer = document.getElementById('magnifier-container');

                // Reinitialize the zoom for the new main image
                initializeZoom(mainImage);
            });
        });

        // Initialize the zoom for the first image
        initializeZoom(mainImage);
    });
</script>

{{> user/footer}}